#!/bin/sh

. ./skydome

_logmsg success "Unform Vaultron ..."

_destroy
errors=$?
if [ 0 -ne $errors ]; then
    _logmsg alter "Terraform destroy failed, infrastructure may still exist."
fi

###
### Remove Consul client data
###
rm -rf ./consul/consul_oss_client_1
errors=$(( $errors + $?))
rm -rf ./consul/consul_oss_client_2
errors=$(( $errors + $?))
rm -rf ./consul/consul_oss_client_3
errors=$(( $errors + $?))

###
### Remove Consul server data
###
rm -rf ./consul/consul_oss_server_1
errors=$(( $errors + $?))
rm -rf ./consul/consul_oss_server_2
errors=$(( $errors + $?))
rm -rf ./consul/consul_oss_server_3
errors=$(( $errors + $?))

###
### Remove Vault server data
###
rm -rf ./vault/vault_oss_server_1
errors=$(( $errors + $?))
rm -rf ./vault/vault_oss_server_2
errors=$(( $errors + $?))
rm -rf ./vault/vault_oss_server_3
errors=$(( $errors + $?))
rm -rf ./vault/vault_*.tmp
errors=$(( $errors + $?))

###
### Remove Terraform state, plans, and backend configs
###
rm -rf ./tfstate/terraform.tfstate*
errors=$(( $errors + $?))
rm -rf ./tfstate/vaultron*.plan
errors=$(( $errors + $?))
rm -rf ./.terraform
errors=$(( $errors + $?))

if [ $errors -gt 0 ]; then
    _logmsg boom "Vaultron unformed (with $errors errors)!"
else
    _logmsg boom "Vaultron unformed!"
fi

exit $errors

