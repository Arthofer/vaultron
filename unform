#!/bin/sh
#
# This script unforms Vaultron
#
# CAUTION: This removes all Vault data and Terraform state!
# Use `terraform destroy` instead if you wish to selectively preserve data.
#
# shellcheck disable=SC1091
#

. ./skydome

if [ -z "$(command -v terraform)" ]; then
  msg alert "Vaultron cannot unform! Could not locate terraform command."
  msg info "Get Terraform from: https://www.terraform.io/downloads.html"
  exit 1
fi

msg greeting "Unform Vaultron ..."

if ! destroy; then
  msg alert "Terraform destroy failed, infrastructure may still exist."
fi

# If we cannot write to the Consul data, then data is likely owned by UID 0
# Alert user and atttempt to change ownership of consul/vault folders
# to avoid failure with destroy
if ! [ -w consul/consuls0 ]; then
  msg notice "Consul data not writable; changing ownership of consul & vault folders to $(whoami):$(id -gn) ..."
  msg notice "You could be prompted by sudo for your user password ..."
  sudo chown -R $(whoami):$(id -gn) consul
  sudo chown -R $(whoami):$(id -gn) vault
fi

# Remove Consul client data
rm -rf ./consul/consulc0
errors=$((errors + $?))
rm -rf ./consul/consulc1
errors=$((errors + $?))
rm -rf ./consul/consulc2
errors=$((errors + $?))

# Remove Consul server data

rm -rf ./consul/consuls0
errors=$((errors + $?))
rm -rf ./consul/consuls1
errors=$((errors + $?))
rm -rf ./consul/consuls2
errors=$((errors + $?))

# Remove Vault server data

rm -rf ./vault/vault0
errors=$((errors + $?))
rm -rf ./vault/vault1
errors=$((errors + $?))
rm -rf ./vault/vault2
errors=$((errors + $?))
rm -f ./vault/vault_DEV_ONLY*.tmp
errors=$((errors + $?))

# Remove Telemetry data

rm -rf ./grafana
errors=$((errors + $?))

# Remove Terraform state, plans, backend configuration, and logs

rm -f ./tfstate/terraform.tfstate*
errors=$((errors + $?))
rm -f ./tfstate/vaultron*.plan
errors=$((errors + $?))
rm -rf ./.terraform/modules
errors=$((errors + $?))
rm -f ./.terraform/terraform.tfstate*
errors=$((errors + $?))

if [ $errors -gt 0 ]; then
  msg alert "Vaultron unformed (with $errors errors)!"
else
  msg boom "Vaultron unformed!"
fi

exit $errors
