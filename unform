#!/bin/sh
#
# This script unforms Vaultron
#
# CAUTION: This removes all Vault data and Terraform state!
# Use `terraform destroy` instead if you wish to selectively preserve data.
#
# shellcheck disable=SC1091
#

. ./skydome

if [ -z "$(command -v terraform)" ]; then
  msg alert "Vaultron cannot unform! Could not locate terraform command."
  msg info "Get Terraform from: https://www.terraform.io/downloads.html"
  exit 1
fi

msg greeting "Unform Vaultron ..."

if ! destroy; then
  msg alert "Terraform destroy failed, infrastructure may still exist."
fi

# If we cannot write to the Consul data, alert user and attempt to change
# ownership of consul/vault folders to avoid failure with Terraform destroy
# NB: This occurs on Docker on Linux but not Docker for Mac.


if [ "$(uname)" = "Linux" ]; then
  if ! [ -w consul/consuls0 ]; then
    msg notice "Consul data not writable; attempting to change ownership of consul & vault folders to $VAULTRON_USER:$VAULTRON_GROUP ..."
    msg notice "You could be prompted by sudo for your user password to make this change ..."
    if ! sudo chown -R "$VAULTRON_USER:$VAULTRON_GROUP" consul; then
      msg alert "Failed to change ownership of consul data to $VAULTRON_USER:$VAULTRON_GROUP"
      msg alert "Manual cleanup of consul folder contents required:"
      ls -lha consul/
    fi
    if ! sudo chown -R "$VAULTRON_USER:$VAULTRON_GROUP" vault; then
      msg alert "Failed to change ownership of vault data to $VAULTRON_USER:$VAULTRON_GROUP"
      msg alert "Manual cleanup of vault folder contents required:"
      ls -lha vault/
    fi
  fi
fi


# Remove Consul client data
rm -rf ./consul/consulc0
errors=$((errors + $?))
rm -rf ./consul/consulc1
errors=$((errors + $?))
rm -rf ./consul/consulc2
errors=$((errors + $?))

# Remove Consul server data

rm -rf ./consul/consuls0
errors=$((errors + $?))
rm -rf ./consul/consuls1
errors=$((errors + $?))
rm -rf ./consul/consuls2
errors=$((errors + $?))

# Remove Vault server data

rm -rf ./vault/vault0
errors=$((errors + $?))
rm -rf ./vault/vault1
errors=$((errors + $?))
rm -rf ./vault/vault2
errors=$((errors + $?))
rm -f ./vault/vault_DEV_ONLY*.tmp
errors=$((errors + $?))

# Remove Telemetry data

rm -rf ./grafana
errors=$((errors + $?))

# Remove Terraform state, plans, backend configuration, and logs

rm -f ./tfstate/terraform.tfstate*
errors=$((errors + $?))
rm -f ./tfstate/vaultron*.plan
errors=$((errors + $?))
rm -rf ./.terraform/modules
errors=$((errors + $?))
rm -f ./.terraform/terraform.tfstate*
errors=$((errors + $?))

if [ $errors -gt 0 ]; then
  msg alert "Vaultron unformed (with $errors errors)!"
else
  msg boom "Vaultron unformed!"
fi

exit $errors
