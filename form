#!/usr/bin/env bash

# shellcheck disable=SC2059

set -e

export txtblu="\e[0;34m" # Blue
export txtgrn="\e[0;32m" # Green
export txtred="\e[0;31m" # Red
export txtylw="\e[0;33m" # Yellow
export txtwht="\e[0;37m" # White
export txtrst="\e[0m"    # Text Reset

###
### Log stuff
###
_logmsg() {
    msgtype="$1"
    msgtxt="$2"
    case "${msgtype}" in
        greeting)
            printf "✨  ${txtylw}${msgtxt}\n"
            ;;
        info)
            printf "ℹ️  ${txtblu}${msgtxt}\n"
            ;;
        success)
            printf "🤖  ${txtgrn}${msgtxt}\n"
            ;;
        notice)
            printf "✴️  ${txtylw}${msgtxt}\n"
            ;;
        alert)
            printf "🚫  ${txtred}${msgtxt}\n" >&2
            ;;
        *)
            printf "⁉️  ${txtwht}${msgtxt}\n" >&2
            ;;
    esac
}

###
### TerraFORM Vaultron!
###
CURRENT_CONSUL_VERSION="$(grep 'variable "consul_version"' -A2 vaultron.tf | awk '/default/ { print $3; }' | sed 's/\"//g')"

CURRENT_VAULT_VERSION="$(grep 'variable "vault_version"' -A2 vaultron.tf | awk '/default/ { print $3; }' | sed 's/\"//g')"

export TF_VAR_consul_version=${TF_VAR_consul_version:-$CURRENT_CONSUL_VERSION}
export TF_VAR_vault_version=${TF_VAR_vault_version:-$CURRENT_VAULT_VERSION}

export CONSUL_HTTP_ADDR="localhost:8500"
export VAULT_ADDR="http://localhost:8200"

_check_consul_version() {
  if [ ! -z "$TF_VAR_consul_version" ]; then
    USER_CONSUL_CONFIG="./templates/consul_oss_server_config_${TF_VAR_consul_version}.tpl";
    if [ ! -f "$USER_CONSUL_CONFIG" ]; then
       echo "🚫  Sorry, Vaultron does not support Consul version: ${TF_VAR_consul_version}";
       unset TF_VAR_consul_version
       kill -INT $$;
    fi
  fi
}

_check_vault_version() {
  if [ ! -z "$TF_VAR_vault_version" ]; then
    USER_VAULT_CONFIG="./templates/vault_config_${TF_VAR_vault_version}.tpl";
    if [ ! -f "$USER_VAULT_CONFIG" ]; then
       echo "🚫  Sorry, Vaultron does not support Vault version: ${TF_VAR_vault_version}";
       unset TF_VAR_vault_version
       kill -INT $$;
    fi
  fi
}

_apply() {
    terraform apply -state=./tfstate/terraform.tfstate > /dev/null 2>&1;
}

_plan() {
    terraform plan -state=./tfstate/terraform.tfstate > /dev/null 2>&1;
}

_check_vault_version
_check_consul_version

_logmsg greeting "Form Vaultron! ..."
_logmsg greeting "Consul version: ${TF_VAR_consul_version}"
_logmsg greeting "Vault version: ${TF_VAR_vault_version}"
_logmsg greeting "Set CONSUL_HTTP_ADDR to ${CONSUL_HTTP_ADDR}"
_logmsg greeting "Set VAULT_ADDR to ${VAULT_ADDR}"

if _plan; then
    if _apply; then
        _logmsg success "Vaultron formed!"
    else
        _logmsg alert "Vaultron cannot form! Check terraform apply output."
    fi
else
    _logmsg alert "Vaultron cannot form! Check terraform plan output."
fi
