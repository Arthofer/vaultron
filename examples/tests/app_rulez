#!/usr/bin/env bash
#
# app_rulez
#
# Sequentially create N AppRole tokens in Vault
#
# Role name: apprulez
#
# shellcheck disable=SC2086
# shellcheck disable=SC2089
# shellcheck disable=SC2090
# shellcheck disable=SC1091
#

. ./skydome

program="$(basename "$0")"

if [ $# -eq 0 ]
  then
    msg alert "Usage: ${program} <number_of_tokens>"
    exit 1
fi

APPRULEZ=$(openssl rand -hex 4)

check_vault() {
  if command nc; then
    PORT_CHECK="nc -z locahost 8200";
  elif command timeout; then
    PORT_CHECK="timeout 1 bash -c '</dev/tcp/localhost/8200'"
  elif command gtimeout; then
    PORT_CHECK="gtimeout 1 bash -c '</dev/tcp/localhost/8200'"
  fi
}

gen_role() {
  msg info "Generating apprulez-$APPRULEZ role ..."
  if ! vault write \
    auth/approle/role/apprulez-$APPRULEZ \
    secret_id_ttl=720h \
    token_num_uses=9999 \
    token_ttl=360h \
    token_max_ttl=420h \
    secret_id_num_uses=9999 > /dev/null 2>&1; then
      msg alert "Failed to generate the apprulez-$APPRULEZ AppRole!"
      exit 1
  fi
  msg complete "Generated apprulez-$APPRULEZ role!"
}

get_role_id() {
  msg info "Getting apprulez-$APPRULEZ role ID ..."
  if ! vault read auth/approle/role/apprulez-$APPRULEZ/role-id | \
    grep role_id | awk '{print $2}' > /dev/null 2>&1; then
      msg alert "Failed to get apprulez-$APPRULEZ role ID!"
      exit 1
  fi
  ROLE_ID=$(vault read auth/approle/role/apprulez-$APPRULEZ/role-id | grep role_id | awk '{print $2}')
  msg complete "Got apprulez-$APPRULEZ role ID!"
}

get_secret_id() {
  #vault write -f auth/approle/role/apprulez/secret-id
  msg info "Getting apprulez-$APPRULEZ secret ID ..."
  if ! vault write -f auth/approle/role/apprulez-$APPRULEZ/secret-id | \
    grep -w secret_id | awk '{print $2}' > /dev/null 2>&1; then
      msg alert "Failed to get apprulez-$APPRULEZ secret ID!"
      exit 1
  fi
  SECRET_ID=$(vault write -f auth/approle/role/apprulez-$APPRULEZ/secret-id | grep -w secret_id | awk '{print $2}')
  msg complete "Got apprulez-$APPRULEZ secret ID!"
}

gen_token() {
  msg secret "Generating $1 tokens: "
  for i in $(seq "$1"); do
    if ! vault write auth/approle/login \
      role_id="$ROLE_ID" \
      secret_id="$SECRET_ID" >> ./tmp/apprulez-$APPRULEZ-tokens.log 2>&1; then
      printf "${txtred}e${txtrst}"
    else
    printf "${txtgrn}.${txtrst}"
  fi
  done
  printf "${txtrst}\n"
}

if $PORT_CHECK; then
  gen_role
  get_role_id
  get_secret_id
  gen_token "$@"
  # msg complete "Generated $1 AppRole tokens!"
else
  echo "Not sure if Vault is reachable at localhost! Giving up!"
  exit 1
fi
