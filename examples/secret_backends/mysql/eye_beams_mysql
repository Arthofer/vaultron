#!/bin/sh
#
# This script is used to form Vaultron with Terraform
#
# shellcheck disable=SC2059
#

. ../../../skydome

_logmsg greeting "Engage Eye Beams for MySQL! ..."

_docker_container() {
docker run --name mysql_vaultron \
    -e MYSQL_ROOT_PASSWORD=vaultron \
    -p 3306:3306 \
    -d mysql:latest > /dev/null 2>&1
}

_logmsg info "Launch MySQL Docker container ..."
_docker_container
if [ 0 -ne $? ]; then
    _logmsg alert "Problem Launching MySQL Docker container"
    exit 1
fi
_logmsg complete "Launched MySQL Docker container!"

MYSQL_CONTAINER_IP="$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql_vaultron)"

_logmsg info "Mount Vault database backend ..."
vault mount database > /dev/null 2>&1
if [ 0 -ne $? ]; then
    _logmsg alert "Problem mounting MySQL database secret backend"
    exit 1
fi
_logmsg complete "Mounted Vault database backend!"

# TODO: This is a sad hack and must instead be done deterministically
_logmsg info "Pausing while MySQL at $MYSQL_CONTAINER_IP wakes up ..."
sleep 25

_logmsg info "Configure MySQL secret backend ..."
vault write database/config/mysql \
    plugin_name=mysql-database-plugin \
    connection_url="root:vaultron@tcp($MYSQL_CONTAINER_IP:3306)/" \
    allowed_roles="readonly"
if [ 0 -ne $? ]; then
    _logmsg alert "Problem configuring MySQL database secret backend"
    exit 1
fi
_logmsg complete "Configured MySQL secret backend!"

_logmsg info "Configure MySQL read-only role ..."
vault write database/roles/readonly \
    db_name=mysql \
    creation_statements="CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT SELECT ON *.* TO '{{name}}'@'%';" \
    default_ttl="1h" \
    max_ttl="24h"
if [ 0 -ne $? ]; then
    _logmsg alert "Problem configuring MySQL read-only role"
    exit 1
fi
_logmsg complete "Configured MySQL read-only role!"
